#BlueJ class context
comment0.target=Crab
comment0.text=\n\ This\ class\ defines\ a\ crab.\ Crabs\ live\ on\ the\ beach.\ They\ like\ sand\ worms\ (very\ yummy,\ especially\ the\ green\ ones).\n
comment1.params=
comment1.target=Crab()
comment1.text=\n\ Initialise\ the\ crab\n
comment10.params=
comment10.target=void\ notifyObservers()
comment10.text=\n\ Notify\ all\ observers\ of\ change\ in\ number\ of\ lives\n\ John\ Ran\ added\ this\ here\ for\ Observer\ Pattern\n
comment2.params=
comment2.target=void\ act()
comment2.text=\n\ Act\ -\ do\ whatever\ the\ crab\ wants\ to\ do.\ This\ method\ is\ called\ whenever\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\n
comment3.params=
comment3.target=void\ checkKeyPress()
comment3.text=\n\ Check\ whether\ a\ control\ key\ on\ the\ keyboard\ has\ been\ pressed.\ If\ it\ has,\ react\ accordingly.\n
comment4.params=
comment4.target=void\ lookForWorm()
comment4.text=\n\ Check\ whether\ we\ have\ stumbled\ upon\ a\ worm.\ If\ we\ have,\ eat\ it.\ If\ not,\ do\ nothing.\ If\ we\ have\ eaten\ eight\ worms,\ we\ win.\n
comment5.params=
comment5.target=void\ loseLife()
comment5.text=\n\ Crab\ loses\ a\ life\ when\ touched\ by\ a\ Lobster\n\ Added\ by\ John\ Ran\n
comment6.params=
comment6.target=int\ getLives()
comment6.text=\n\ Return\ the\ number\ of\ lives\ Crab\ has\ left.\n\ Added\ by\ John\ Ran\n
comment7.params=
comment7.target=int\ getNumWorms()
comment7.text=\n\ Return\ the\ number\ of\ Worms\ eaten\ by\ Crab.\n\ Added\ by\ John\ Ran\n
comment8.params=obj
comment8.target=void\ attach(LifeObserver)
comment8.text=\n\ Attach\ an\ observer\ to\ the\ ArrayList\n\ John\ Ran\ added\ this\ here\ for\ Observer\ Pattern\n
comment9.params=obj
comment9.target=void\ detach(LifeObserver)
comment9.text=\n\ Detach\ an\ observer\ from\ the\ ArrayList\n\ John\ Ran\ added\ this\ here\ for\ Observer\ Pattern\n
numComments=11
