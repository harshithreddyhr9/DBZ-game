<?xml version="1.0" encoding="UTF-8"?>
<class name="Crab" extends="Actor" extends-java="Actor" enable="true" strideversion="1">
    <javadoc xml:space="preserve">This class defines a crab. Crabs live on the beach. They like sand worms (very yummy, especially the green ones).</javadoc>
    <imports>
        <import target="java.util.*" enable="true"/>
        <import target="greenfoot.*" enable="true"/>
        <import target="java.awt.Color" enable="true"/>
        <import target="java.util.List" enable="true"/>
        <import target="java.util.Set" enable="true"/>
    </imports>
    <implements/>
    <fields/>
    <constructors>
        <comment xml:space="preserve">WARNING: This file is auto-generated and any changes to it will be overwritten</comment>
        <comment xml:space="preserve">private int wormsEaten;</comment>
        <constructor access="public" enable="true">
            <javadoc xml:space="preserve">Initialise the crab</javadoc>
            <params/>
            <throws/>
            <body>
                <comment xml:space="preserve">wormsEaten = 0;</comment>
            </body>
        </constructor>
    </constructors>
    <methods>
        <method access="public" type="void" type-java="void" name="act" enable="true">
            <javadoc xml:space="preserve">Act - do whatever the crab wants to do. This method is called whenever the 'Act' or 'Run' button gets pressed in the environment.</javadoc>
            <params/>
            <throws/>
            <body>
                <call expression="checkKeyPress ( )" expression-java="checkKeyPress ( )" enable="true"/>
                <call expression="lookForWorm ( )" expression-java="lookForWorm ( )" enable="true"/>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="checkKeyPress" enable="true">
            <javadoc xml:space="preserve">Check whether a control key on the keyboard has been pressed. If it has, react accordingly.</javadoc>
            <params/>
            <throws/>
            <body>
                <if condition="Greenfoot . isKeyDown ( &quot;up&quot; )" condition-java="Greenfoot . isKeyDown ( &quot;up&quot; )" enable="true">
                    <ifStatements>
                        <call expression="turn ( - 25 )" expression-java="turn ( - 25 )" enable="true"/>
                    </ifStatements>
                </if>
                <if condition="Greenfoot . isKeyDown ( &quot;down&quot; )" condition-java="Greenfoot . isKeyDown ( &quot;down&quot; )" enable="true">
                    <ifStatements>
                        <call expression="turn ( 25 )" expression-java="turn ( 25 )" enable="true"/>
                    </ifStatements>
                </if>
                <if condition="Greenfoot . isKeyDown ( &quot;right&quot; )" condition-java="Greenfoot . isKeyDown ( &quot;right&quot; )" enable="true">
                    <ifStatements>
                        <call expression="move ( 3 )" expression-java="move ( 3 )" enable="true"/>
                    </ifStatements>
                </if>
                <if condition="Greenfoot . isKeyDown ( &quot;left&quot; )" condition-java="Greenfoot . isKeyDown ( &quot;left&quot; )" enable="true">
                    <ifStatements>
                        <call expression="move ( - 3 )" expression-java="move ( - 3 )" enable="true"/>
                    </ifStatements>
                </if>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="lookForWorm" enable="true">
            <javadoc xml:space="preserve">Check whether we have stumbled upon a worm. If we have, eat it. If not, do nothing. If we have eaten eight worms, we win.</javadoc>
            <params/>
            <throws/>
            <body>
                <if condition="isTouching ( Worm . class )" condition-java="isTouching ( Worm . class )" enable="true">
                    <ifStatements>
                        <call expression="removeTouching ( Worm . class )" expression-java="removeTouching ( Worm . class )" enable="true"/>
                        <comment xml:space="preserve">wormsEaten = wormsEaten + 1; getWorld().showText("Worms: " + wormsEaten, 100, 30);</comment>
                        <variable type="CrabWorld" type-java="CrabWorld" name="world" value="( CrabWorld ) getWorld ( )" value-java="( CrabWorld ) getWorld ( )" enable="true"/>
                        <call expression="world . addWorm ( )" expression-java="world . addWorm ( )" enable="true"/>
                        <call expression="Greenfoot . playSound ( &quot;slurp.wav&quot; )" expression-java="Greenfoot . playSound ( &quot;slurp.wav&quot; )" enable="true"/>
                    </ifStatements>
                </if>
            </body>
        </method>
    </methods>
</class>
